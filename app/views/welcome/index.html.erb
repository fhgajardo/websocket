<!DOCTYPE html>
<html>
  <head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>

  <script src="/socket.io/socket.io.js"></script>


  </head>
  <body>
    <div id="map"></div>
    <script>


      const socket = io('wss://integracion-tarea-3.herokuapp.com',{
        path: '/flights',
        transports: ['websocket']
      });

      socket.emit('AIRPORTS');
      socket.emit('FLIGHTS');

      socket.on('POSITION', function(msg){
        var code = msg.code;
        var pos = msg.position;


        var root_path = new google.maps.Marker({
          position: {lat: pos[0], lng: pos[1]},
          icon: {
            path: google.maps.SymbolPath.BACKWARD_OPEN_ARROW,
            scale: 1,
            fillColor: 'blue',
            strokeColor: 'blue'
          },
          draggable: true,
          map: map
        });
        if (code in flights_marker){
          var flight = flights_marker[code]
          flight.setPosition(new google.maps.LatLng(pos[0],pos[1]));
        }else{
          socket.emit('FLIGHTS');
        };
        



      });



      socket.on('AIRPORTS', function(airports_socket){ 
        airports = airports_socket;

        var lat_var = 0;
        var lng_var = 0;
        var size = 0; 

        for(var k in airports){

          c = airports[k].airport_position;
          lat_var += c[0];
          lng_var += c[1];
          size++;

          var marker = new google.maps.Marker({
            position: {lat: c[0], lng: c[1]},
            icon: {
              path: google.maps.SymbolPath.CIRCLE,
              scale: 4
            },
            map: map
          });
        };
        lat_var = lat_var/size
        lng_var = lng_var/size

        var center = {lat: lat_var, lng: lng_var};

        map.setCenter(center)
      });

      var flights_marker = {}
      socket.on('FLIGHTS', function(flights_socket){
        var flights = flights_socket;
        for(var i in flights){
          flight = flights[i]
          pos_init = flight.origin.airport_position
          pos_end = flight.destination.airport_position

          var flightPath = new google.maps.Polyline({
            path: [
              {lat: pos_init[0], lng: pos_init[1]},
              {lat: pos_end[0], lng: pos_end[1]}
            ],
            geodesic: true,
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 2
        });

        flightPath.setMap(map);


          var marker = new google.maps.Marker({
            position: new google.maps.LatLng(pos_init[0], pos_init[1]),
            icon: {
              url: 'http://maps.google.com/mapfiles/kml/shapes/airports.png',
              scaledSize: new google.maps.Size(25, 25)},
            scale: 1,
            map: map
          });
          flights_marker[flight.code] = marker
        }; 
      });





      var map;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -34.397, lng: 150.644},
          zoom: 6
        });
      }


    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD0R_vYgH7K7p-3JsN37rsiaBx6F9sbr70&callback=initMap"
    async defer></script>
  </body>
</html>